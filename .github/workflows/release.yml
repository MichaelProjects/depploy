name: release

on:
  push:
    tags:
      - "v*"

jobs:
  binary:
    name: Publish binary for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # This should work with only the `include`s, but it currently doesn't because of this bug:
        # https://github.community/t5/How-to-use-Git-and-GitHub/GitHub-Actions-Matrix-options-dont-work-as-documented/td-p/29558
        target: [x86_64-osx, x86_64-unknown-linux-musl, aarch64-linux-android, aarch64-apple-darwin]
        include:
          - os: macos-latest
            target: x86_64-osx
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: aarch64-linux-android
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: target
          key: build_cache
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - name: install targets
        run: rustup target add x86_64-apple-darwin && rustup target add x86_64-unknown-linux-gnu

      - name: Install libssl-dev
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update && sudo apt-get install libssl-dev

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable


      - name: version
        run: echo "::set-output name=version::$(./target/release/depploy --version)"
        id: version

      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     prerelease: false
      #     files: |
      #       archive/depploy.darwin-amd64.tar.gz
      #       archive/x86_64-unknown-linux-gnu
      