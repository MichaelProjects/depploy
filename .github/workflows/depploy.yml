name: depploy_pipeline

on:
  push:
    tags:
      - "v*"
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]


jobs:
  testing:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: Swatinem/rust-cache@v1
        with: 
            sharedKey: key
      - name: run tests
        run: cargo test --release

      - name: run clippy
        run: cargo clippy --release

  build:
    needs: testing
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      # - name:  Install
      #   run: |
      #     if($RUNNER_OS -eq "windows") {
      #         git clone https://github.com/Microsoft/vcpkg.git
      #         ./vcpkg/bootstrap-vcpkg.sh
      #         vcpkg install openssl
      #     }
      #     else{
      #         echo "$RUNNER_OS not supported"
      #         exit 1
      #     }
      #   shell: powershell
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: Swatinem/rust-cache@v1
        with: 
          sharedKey: ${{ matrix.os }}
      - name: build depploy
        run: cargo build --release --bin depploy
      - name: zip
        run: |
          if [ $RUNNER_OS == "ubuntu" ]; then
            tar -zcvf target/release/depploy.linux-amd64.tar.gz target/release/depploy
          else
            tar -zcvf target/release/depploy.darwin-amd64.tar.gz target/release/depploy
          fi

  create-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-20.04
    steps:

      - name: version
        run: echo "::set-output name=version::$(./target/release/depploy --version)"
        id: version
        
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

  upload-linux:
    strategy:
        matrix:
          os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    needs: create-release
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
        with: 
            sharedKey: ${{ matrix.os }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/depploy.linux-amd64.tar.gz
          asset_name: depploy.linux-amd64.tar.gz
          asset_content_type: application/gzip

  upload-macos:
    strategy:
        matrix:
          os: [macos-latest]
    runs-on: ${{ matrix.os }}
    needs: create-release
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
        with: 
            sharedKey: ${{ matrix.os }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/depploy.darwin-amd64.tar.gz
          asset_name: depploy.darwin-amd64.tar.gz
          asset_content_type: application/gzip
      # - name: upload windows artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: target/release/depploy.windows-amd64.zip
      #     asset_name: depploy.windows-amd64.zip
      #     asset_content_type: application/zip
          