name: depploy_pipeline

on:
  push:
    tags:
      - "v*"
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]


jobs:
  testing:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: Swatinem/rust-cache@v1
        with: 
            sharedKey: ${{ matrix.os }}
      - name: run tests
        run: cargo test --release

      - name: run clippy
        run: cargo clippy --release

  build:
    needs: testing
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: Swatinem/rust-cache@v1
        with: 
          sharedKey: ${{ matrix.os }}
      - uses: actions/cache@v3
        with:
          path: archive-${{ matrix.os }}
          key: ${{ matrix.os }}-build
      - name: build depploy
        run: cargo build --release --bin depploy
      - name: zip
        run: |
          echo $RUNNER_OS
          if [ $RUNNER_OS = "Linux" ]; then
            mkdir -p archive-ubuntu-latest
            tar -zcvf archive-ubuntu-latest/depploy.linux-amd64.tar.gz target/release/depploy
          else
            mkdir -p archive-macos-latest
            tar -zcvf archive-macos-latest/depploy.darwin-amd64.tar.gz target/release/depploy
          fi

  create_release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: version
        run: echo "::set-output name=version::$(./target/release/depploy --version)"
        id: version
        
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

  upload-linux:
    strategy:
        matrix:
          os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    needs: create_release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          key: ${{ matrix.os }}-build
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: archive-${{ matrix.os }}/depploy.linux-amd64.tar.gz
          asset_name: depploy.linux-amd64.tar.gz
          asset_content_type: application/gzip

  upload-macos:
    strategy:
        matrix:
          os: [macos-latest]
    runs-on: ${{ matrix.os }}
    needs: create_release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          key: ${{ matrix.os }}-build
          path: archive-${{ matrix.os }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: archive-${{ matrix.os }}/depploy.darwin-amd64.tar.gz
          asset_name: depploy.darwin-amd64.tar.gz
          asset_content_type: application/gzip
          